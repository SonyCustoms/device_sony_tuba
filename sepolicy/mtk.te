#types
#

##
type ccci_fsd_exec, exec_type, file_type;
type ccci_fsd, domain;
init_daemon_domain(ccci_fsd)
wakelock_use(ccci_fsd)
##

##
type ccci_mdinit_exec , exec_type, file_type;
type ccci_mdinit ,domain;
init_daemon_domain(ccci_mdinit)
wakelock_use(ccci_mdinit)
##

##
type ccci_rpcd_exec, exec_type, file_type;
type ccci_rpcd, domain;
init_daemon_domain(ccci_rpcd)
wakelock_use(ccci_rpcd)
##

##
type mtkmal, domain;
type mtkmal_exec, exec_type, file_type;
init_daemon_domain(mtkmal)
##

##
type mtkrild_exec , exec_type, file_type;
type mtkrild ,domain;
init_daemon_domain(mtkrild)
net_domain(mtkrild)
##

##
type mtkrildmd2_exec , exec_type, file_type;
type mtkrildmd2 ,domain;
init_daemon_domain(mtkrildmd2)
net_domain(mtkrildmd2)
##

##
type nvram_agent_binder_exec , exec_type, file_type;
type nvram_agent_binder ,domain;
init_daemon_domain(nvram_agent_binder)
binder_use(nvram_agent_binder)
binder_service(nvram_agent_binder)
##

##
type mtk_crossmount_exec , exec_type, file_type;
type mtk_crossmount ,domain;
init_daemon_domain(mtk_crossmount)
##

##
type nvram_daemon_exec , exec_type, file_type;
type nvram_daemon ,domain;
init_daemon_domain(nvram_daemon)
##

##
type ril-3gddaemon, domain;
type ril-3gddaemon_exec, exec_type, file_type;
init_daemon_domain(ril-3gddaemon)
net_domain(ril-3gddaemon)
##

##
type rilproxy_exec , exec_type, file_type;
type rilproxy ,domain;
init_daemon_domain(rilproxy)
net_domain(rilproxy)
wakelock_use(rilproxy)
##

##
type wmt_loader_exec , exec_type, file_type;
type wmt_loader ,domain;
init_daemon_domain(wmt_loader)
##

##
type mtk_wmt_launcher_exec , exec_type, file_type;
type mtk_wmt_launcher ,domain;
init_daemon_domain(mtk_wmt_launcher)
##

##
type yamaha537_exec , exec_type, file_type;
type yamaha537 ,domain;
init_daemon_domain(yamaha537)
##

##
type cache_pc_file_exec , exec_type, file_type;
type cache_pc_file ,domain;
init_daemon_domain(cache_pc_file)
##

##
type suntrold_exec , exec_type, file_type;
type suntrold ,domain;
init_daemon_domain(suntrold)
##


##
type embms_library_exec , exec_type, file_type;
type embms_library ,domain;
init_daemon_domain(embms_library)
##

##
type ims_mode_prop, property_type;
type mtk_em_3gvt_prop, property_type;
type mtk_em_bt_sspdebug_prop, property_type;
type mtk_em_ims_prop, property_type;
type mtk_em_prop, property_type;
type mtk_em_ril_apnchange_prop, property_type;
type semc_version_cust_active_prop, property_type;
type usp_prop, property_type;
##

##
unix_socket_connect(ril-3gddaemon, property, init)
unix_socket_connect(radio, rild_vsim, mtkrild)
unix_socket_connect(radio, rild_vsim_md2, mtkrild)
unix_socket_connect(radio, rild_ims, mtkrild)
unix_socket_connect(radio, rild-dongle, ril-3gddaemon)
unix_socket_connect(radio, volte_imsa1, volte_imcb)
unix_socket_connect(radio, agpsd, mtk_agpsd)
unix_socket_connect(mtkrildmd2, property, init)
unix_socket_connect(mtkrild, property, init)
unix_socket_connect(ccci_mdinit, property, init)
##

#mtk
#
allow mtk_agpsd agps_device:chr_file { read lock getattr write ioctl open append };
allow mtk_agpsd agpsd_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtk_agpsd agpsd_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd agpsd_data_file:sock_file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd ccci_device:chr_file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd customization_target_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow mtk_agpsd customization_target_file:lnk_file { read open };
allow mtk_agpsd ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtk_agpsd ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd eemcs_device:chr_file { read lock getattr write ioctl open append };
allow mtk_agpsd guiext-server:binder { transfer call };
allow mtk_agpsd guiext-server:fd use;
allow mtk_agpsd guiext-server_service:service_manager find;
allow mtk_agpsd hotknot_native:binder { transfer call };
allow mtk_agpsd hotknot_native:fd use;
allow mtk_agpsd init:process sigchld;
allow mtk_agpsd media_rw_data_file:dir { read write search open add_name };
allow mtk_agpsd media_rw_data_file:file { read create open append };
allow mtk_agpsd mnld:unix_dgram_socket sendto;
allow mtk_agpsd mnt_user_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtk_agpsd mnt_user_file:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd mtk_agpsd:dir { search read lock getattr ioctl open };
allow mtk_agpsd mtk_agpsd:fd use;
allow mtk_agpsd mtk_agpsd:fifo_file { read lock getattr write ioctl open append };
allow mtk_agpsd mtk_agpsd:file { read lock getattr write ioctl open append };
allow mtk_agpsd mtk_agpsd:lnk_file { read lock ioctl open getattr };
allow mtk_agpsd mtk_agpsd:netlink_route_socket { setopt setattr read lock create nlmsg_read write getattr connect shutdown bind getopt append };
allow mtk_agpsd mtk_agpsd:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow mtk_agpsd mtk_agpsd:rawip_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtk_agpsd mtk_agpsd:tcp_socket { lock accept connect shutdown append connectto create write relabelfrom getattr getopt listen acceptfrom setopt read newconn ioctl recv_msg name_bind name_connect send_msg setattr bind recvfrom sendto relabelto node_bind };
allow mtk_agpsd mtk_agpsd:udp_socket { lock accept connect shutdown append create write relabelfrom getattr getopt listen setopt read ioctl recv_msg name_bind send_msg setattr bind recvfrom sendto relabelto node_bind };
allow mtk_agpsd mtk_agpsd:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow mtk_agpsd mtk_agpsd:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow mtk_agpsd mtk_agpsd_exec:file { read open getattr entrypoint execute };
allow mtk_agpsd mtk_agpsd_tmpfs:file { read write };
allow mtk_agpsd nvcfg_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtk_agpsd nvcfg_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd oemfs:dir { read search open };
allow mtk_agpsd oemfs:file { read getattr open };
allow mtk_agpsd program_binary:binder { transfer call };
allow mtk_agpsd program_binary:fd use;
allow mtk_agpsd rilproxy:unix_dgram_socket sendto;
allow mtk_agpsd sdcard_type:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtk_agpsd sdcard_type:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd slpd:unix_dgram_socket sendto;
allow mtk_agpsd storage_file:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd sysfs:dir { search read lock getattr ioctl open };
allow mtk_agpsd sysfs:file { read lock ioctl open getattr };
allow mtk_agpsd sysfs:lnk_file { read lock ioctl open getattr };
allow mtk_agpsd system_server:unix_dgram_socket sendto;
allow mtk_agpsd tmpfs:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_agpsd ttySDIO_device:chr_file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_crossmount ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtk_crossmount ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_crossmount guiext-server:binder { transfer call };
allow mtk_crossmount guiext-server:fd use;
allow mtk_crossmount guiext-server_service:service_manager find;
allow mtk_crossmount hotknot_native:binder { transfer call };
allow mtk_crossmount hotknot_native:fd use;
allow mtk_crossmount init:process sigchld;
allow mtk_crossmount mtk_crossmount:binder { transfer call };
allow mtk_crossmount mtk_crossmount:dir { search read lock getattr ioctl open };
allow mtk_crossmount mtk_crossmount:fd use;
allow mtk_crossmount mtk_crossmount:fifo_file { read lock getattr write ioctl open append };
allow mtk_crossmount mtk_crossmount:file { read lock getattr write ioctl open append };
allow mtk_crossmount mtk_crossmount:lnk_file { read lock ioctl open getattr };
allow mtk_crossmount mtk_crossmount:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow mtk_crossmount mtk_crossmount:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow mtk_crossmount mtk_crossmount:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow mtk_crossmount mtk_crossmount_exec:file { read open getattr entrypoint execute };
allow mtk_crossmount mtk_crossmount_tmpfs:file { read write };
allow mtk_crossmount program_binary:binder { transfer call };
allow mtk_crossmount program_binary:fd use;
allow mtk_crossmount servicemanager:binder { transfer call };
allow mtk_crossmount sysfs:dir { search read lock getattr ioctl open };
allow mtk_crossmount sysfs:file { read lock ioctl open getattr };
allow mtk_crossmount sysfs:lnk_file { read lock ioctl open getattr };
allow mtk_wmt_launcher devpts:chr_file { read lock getattr write ioctl open append };
allow mtk_wmt_launcher ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtk_wmt_launcher ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtk_wmt_launcher guiext-server:binder { transfer call };
allow mtk_wmt_launcher guiext-server:fd use;
allow mtk_wmt_launcher guiext-server_service:service_manager find;
allow mtk_wmt_launcher hotknot_native:binder { transfer call };
allow mtk_wmt_launcher hotknot_native:fd use;
allow mtk_wmt_launcher init:process sigchld;
allow mtk_wmt_launcher init:unix_stream_socket connectto;
allow mtk_wmt_launcher mtk_wmt_launcher:dir { search read lock getattr ioctl open };
allow mtk_wmt_launcher mtk_wmt_launcher:fd use;
allow mtk_wmt_launcher mtk_wmt_launcher:fifo_file { read lock getattr write ioctl open append };
allow mtk_wmt_launcher mtk_wmt_launcher:file { read lock getattr write ioctl open append };
allow mtk_wmt_launcher mtk_wmt_launcher:lnk_file { read lock ioctl open getattr };
allow mtk_wmt_launcher mtk_wmt_launcher:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow mtk_wmt_launcher mtk_wmt_launcher:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow mtk_wmt_launcher mtk_wmt_launcher:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow mtk_wmt_launcher mtk_wmt_launcher_exec:file { read open getattr entrypoint execute };
allow mtk_wmt_launcher mtk_wmt_launcher_tmpfs:file { read write };
allow mtk_wmt_launcher program_binary:binder { transfer call };
allow mtk_wmt_launcher program_binary:fd use;
allow mtk_wmt_launcher property_socket:sock_file write;
allow mtk_wmt_launcher stpwmt_device:chr_file { read lock getattr write ioctl open append };
allow mtk_wmt_launcher sysfs:dir { search read lock getattr ioctl open };
allow mtk_wmt_launcher sysfs:file { read lock ioctl open getattr };
allow mtk_wmt_launcher sysfs:lnk_file { read lock ioctl open getattr };
allow mtk_wmt_launcher system_file:dir { read open };
allow mtk_wmt_launcher wmt_prop:file { read lock ioctl open getattr };
allow mtk_wmt_launcher wmt_prop:property_service set;
allow mtkmal ctl_volte_imcb_prop:property_service set;
allow mtkmal ctl_volte_stack_prop:property_service set;
allow mtkmal ctl_volte_ua_prop:property_service set;
allow mtkmal device:dir { write remove_name add_name };
allow mtkmal device:lnk_file { create unlink };
allow mtkmal devpts:chr_file { setattr read getattr write ioctl open };
allow mtkmal ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkmal ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkmal epdg_wod:unix_stream_socket connectto;
allow mtkmal guiext-server:binder { transfer call };
allow mtkmal guiext-server:fd use;
allow mtkmal guiext-server_service:service_manager find;
allow mtkmal hotknot_native:binder { transfer call };
allow mtkmal hotknot_native:fd use;
allow mtkmal init:process sigchld;
allow mtkmal init:unix_stream_socket connectto;
allow mtkmal mal_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkmal mal_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkmal mal_mfi_socket:sock_file write;
allow mtkmal mtkmal:capability { setuid setgid };
allow mtkmal mtkmal:capability2 wake_alarm;
allow mtkmal mtkmal:dir { search read lock getattr ioctl open };
allow mtkmal mtkmal:fd use;
allow mtkmal mtkmal:fifo_file { read lock getattr write ioctl open append };
allow mtkmal mtkmal:file { read lock getattr write ioctl open append };
allow mtkmal mtkmal:lnk_file { read lock ioctl open getattr };
allow mtkmal mtkmal:netlink_route_socket { nlmsg_write read bind create nlmsg_read write };
allow mtkmal mtkmal:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow mtkmal mtkmal:udp_socket { ioctl create };
allow mtkmal mtkmal:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow mtkmal mtkmal:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow mtkmal mtkmal_exec:file { read open getattr entrypoint execute };
allow mtkmal mtkmal_tmpfs:file { read write };
allow mtkmal mtkrild:unix_stream_socket connectto;
allow mtkmal netd:unix_stream_socket connectto;
allow mtkmal netd_socket:sock_file write;
allow mtkmal persist_mal_prop:property_service set;
allow mtkmal program_binary:binder { transfer call };
allow mtkmal program_binary:fd use;
allow mtkmal property_socket:sock_file write;
allow mtkmal radio_prop:property_service set;
allow mtkmal radio_tmpfs:file write;
allow mtkmal ril_mux_report_case_prop:property_service set;
allow mtkmal rild_mal_at_md2_socket:sock_file write;
allow mtkmal rild_mal_at_socket:sock_file write;
allow mtkmal rild_mal_md2_socket:sock_file write;
allow mtkmal rild_mal_socket:sock_file write;
allow mtkmal rilproxy:unix_stream_socket connectto;
allow mtkmal shell_exec:file { read execute open execute_no_trans };
allow mtkmal socket_device:sock_file write;
allow mtkmal sysfs:dir { search read lock getattr ioctl open };
allow mtkmal sysfs:file { read lock ioctl open getattr };
allow mtkmal sysfs:lnk_file { read lock ioctl open getattr };
allow mtkmal system_data_file:dir { read write open add_name remove_name };
allow mtkmal system_file:file execute_no_trans;
allow mtkmal tmpfs:lnk_file read;
allow mtkmal volte_imcb:unix_stream_socket connectto;
allow mtkmal volte_imsa1_socket:sock_file write;
allow mtkmal volte_prop:property_service set;
allow mtkmal wfca:unix_stream_socket connectto;
allow mtkmal wifi_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkmal wifi_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkmal wod_action_socket:sock_file write;
allow mtkmal wod_sim_socket:sock_file write;
allow mtkmal wpa:unix_dgram_socket sendto;
allow mtkmal wpa_socket:dir { search read lock getattr write ioctl remove_name open add_name };
allow mtkmal wpa_socket:sock_file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkrild Vcodec_device:chr_file { read lock getattr write ioctl open append };
allow mtkrild alarm_device:chr_file { read lock getattr write ioctl open append };
allow mtkrild block_device:dir search;
allow mtkrild bluetooth_efs_file:dir { search read lock getattr ioctl open };
allow mtkrild bluetooth_efs_file:file { read lock ioctl open getattr };
allow mtkrild ccci_device:chr_file { read lock getattr write ioctl open append };
allow mtkrild cgroup:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkrild ctl_muxreport-daemon_prop:file { read lock ioctl open getattr };
allow mtkrild ctl_muxreport-daemon_prop:property_service set;
allow mtkrild devmap_device:chr_file { read lock ioctl open getattr };
allow mtkrild devpts:chr_file { read lock getattr write ioctl open append };
allow mtkrild ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkrild ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkrild eemcs_device:chr_file { read lock getattr write ioctl open append };
allow mtkrild efs_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkrild efs_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkrild gps_device:chr_file { read lock getattr write ioctl open append };
allow mtkrild guiext-server:binder { transfer call };
allow mtkrild guiext-server:fd use;
allow mtkrild guiext-server_service:service_manager find;
allow mtkrild hotknot_native:binder { transfer call };
allow mtkrild hotknot_native:fd use;
allow mtkrild init:process sigchld;
allow mtkrild init:unix_stream_socket connectto;
allow mtkrild kernel:system module_request;
allow mtkrild mal_mfi_socket:sock_file { write lock open append };
allow mtkrild misc_device:chr_file { read lock getattr write ioctl open append };
allow mtkrild mmcblk0_block_device:blk_file { read lock getattr write ioctl open append };
allow mtkrild mtd_device:dir search;
allow mtkrild mtkmal:unix_stream_socket connectto;
allow mtkrild mtkrild:capability { setuid net_admin net_raw dac_override };
allow mtkrild mtkrild:capability2 block_suspend;
allow mtkrild mtkrild:dir { search read lock getattr ioctl open };
allow mtkrild mtkrild:fd use;
allow mtkrild mtkrild:fifo_file { read lock getattr write ioctl open append };
allow mtkrild mtkrild:file { read lock getattr write ioctl open append };
allow mtkrild mtkrild:lnk_file { read lock ioctl open getattr };
allow mtkrild mtkrild:netlink_kobject_uevent_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtkrild mtkrild:netlink_route_socket { nlmsg_write setopt setattr read lock create nlmsg_read write getattr connect shutdown bind getopt append };
allow mtkrild mtkrild:netlink_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtkrild mtkrild:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow mtkrild mtkrild:rawip_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtkrild mtkrild:socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtkrild mtkrild:tcp_socket { lock accept connect shutdown append connectto create write relabelfrom getattr getopt listen acceptfrom setopt read newconn ioctl recv_msg name_bind name_connect send_msg setattr bind recvfrom sendto relabelto node_bind };
allow mtkrild mtkrild:udp_socket { lock accept connect shutdown append create write relabelfrom getattr getopt listen setopt read ioctl recv_msg name_bind send_msg setattr bind recvfrom sendto relabelto node_bind };
allow mtkrild mtkrild:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow mtkrild mtkrild:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow mtkrild mtkrild_exec:file { read open getattr entrypoint execute };
allow mtkrild mtkrild_tmpfs:file { read write };
allow mtkrild net_radio_prop:file { read lock ioctl open getattr };
allow mtkrild net_radio_prop:property_service set;
allow mtkrild para_block_device:blk_file { read lock getattr write ioctl open append };
allow mtkrild persist_ril_prop:file { read lock ioctl open getattr };
allow mtkrild persist_ril_prop:property_service set;
allow mtkrild persist_service_atci_prop:file { read lock ioctl open getattr };
allow mtkrild persist_service_atci_prop:property_service set;
allow mtkrild platform_app:fd use;
allow mtkrild proc:file { read lock getattr write ioctl open append };
allow mtkrild proc_lk_env:file { read lock getattr write ioctl open append };
allow mtkrild proc_net:file { write lock open append };
allow mtkrild program_binary:binder { transfer call };
allow mtkrild program_binary:fd use;
allow mtkrild property_socket:sock_file write;
allow mtkrild qemu_pipe_device:chr_file { read lock getattr write ioctl open append };
allow mtkrild radio:fd use;
allow mtkrild radio_data_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow mtkrild radio_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkrild radio_device:blk_file { read lock ioctl open getattr };
allow mtkrild radio_device:chr_file { read lock getattr write ioctl open append };
allow mtkrild radio_prop:file { read lock ioctl open getattr };
allow mtkrild radio_prop:property_service set;
allow mtkrild radio_tmpfs:file { write lock open append };
allow mtkrild ril_active_md_prop:file { read lock ioctl open getattr };
allow mtkrild ril_active_md_prop:property_service set;
allow mtkrild ril_cdma_report_prop:file { read lock ioctl open getattr };
allow mtkrild ril_cdma_report_prop:property_service set;
allow mtkrild ril_mux_report_case_prop:file { read lock ioctl open getattr };
allow mtkrild ril_mux_report_case_prop:property_service set;
allow mtkrild sdcard_type:dir { search read lock getattr ioctl open };
allow mtkrild shell_exec:file { execute read lock getattr execute_no_trans ioctl open };
allow mtkrild socket_device:sock_file { write lock open append };
allow mtkrild sysfs:dir { search read lock getattr ioctl open };
allow mtkrild sysfs:file { read lock ioctl open getattr };
allow mtkrild sysfs:lnk_file { read lock ioctl open getattr };
allow mtkrild sysfs_ccci:dir search;
allow mtkrild sysfs_ccci:file { read lock ioctl open getattr };
allow mtkrild sysfs_vcorefs_pwrctrl:file { write lock open append };
allow mtkrild sysfs_wake_lock:file { read lock getattr write ioctl open append };
allow mtkrild system_data_file:dir { search read lock getattr ioctl open };
allow mtkrild system_data_file:file { read lock ioctl open getattr };
allow mtkrild system_file:file { getattr execute execute_no_trans };
allow mtkrild system_radio_prop:file { read lock ioctl open getattr };
allow mtkrild system_radio_prop:property_service set;
allow mtkrild tty_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 Vcodec_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 alarm_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 block_device:dir search;
allow mtkrildmd2 bluetooth_efs_file:dir { search read lock getattr ioctl open };
allow mtkrildmd2 bluetooth_efs_file:file { read lock ioctl open getattr };
allow mtkrildmd2 ccci_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 cgroup:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkrildmd2 ctl_muxreport-daemon_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 ctl_muxreport-daemon_prop:property_service set;
allow mtkrildmd2 devmap_device:chr_file { read lock ioctl open getattr };
allow mtkrildmd2 devpts:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkrildmd2 ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkrildmd2 eemcs_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 efs_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow mtkrildmd2 efs_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkrildmd2 emd_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 gps_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 guiext-server:binder { transfer call };
allow mtkrildmd2 guiext-server:fd use;
allow mtkrildmd2 guiext-server_service:service_manager find;
allow mtkrildmd2 hotknot_native:binder { transfer call };
allow mtkrildmd2 hotknot_native:fd use;
allow mtkrildmd2 init:process sigchld;
allow mtkrildmd2 init:unix_stream_socket connectto;
allow mtkrildmd2 kernel:system module_request;
allow mtkrildmd2 misc_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 mtd_device:dir search;
allow mtkrildmd2 mtkrildmd2:capability { setuid net_admin net_raw dac_override };
allow mtkrildmd2 mtkrildmd2:capability2 block_suspend;
allow mtkrildmd2 mtkrildmd2:dir { search read lock getattr ioctl open };
allow mtkrildmd2 mtkrildmd2:fd use;
allow mtkrildmd2 mtkrildmd2:fifo_file { read lock getattr write ioctl open append };
allow mtkrildmd2 mtkrildmd2:file { read lock getattr write ioctl open append };
allow mtkrildmd2 mtkrildmd2:lnk_file { read lock ioctl open getattr };
allow mtkrildmd2 mtkrildmd2:netlink_kobject_uevent_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtkrildmd2 mtkrildmd2:netlink_route_socket { nlmsg_write setopt setattr read lock create nlmsg_read write getattr connect shutdown bind getopt append };
allow mtkrildmd2 mtkrildmd2:netlink_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtkrildmd2 mtkrildmd2:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow mtkrildmd2 mtkrildmd2:rawip_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtkrildmd2 mtkrildmd2:socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow mtkrildmd2 mtkrildmd2:tcp_socket { lock accept connect shutdown append connectto create write relabelfrom getattr getopt listen acceptfrom setopt read newconn ioctl recv_msg name_bind name_connect send_msg setattr bind recvfrom sendto relabelto node_bind };
allow mtkrildmd2 mtkrildmd2:udp_socket { lock accept connect shutdown append create write relabelfrom getattr getopt listen setopt read ioctl recv_msg name_bind send_msg setattr bind recvfrom sendto relabelto node_bind };
allow mtkrildmd2 mtkrildmd2:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow mtkrildmd2 mtkrildmd2:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow mtkrildmd2 mtkrildmd2_exec:file { read open getattr entrypoint execute };
allow mtkrildmd2 mtkrildmd2_tmpfs:file { read write };
allow mtkrildmd2 net_radio_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 net_radio_prop:property_service set;
allow mtkrildmd2 persist_ril_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 persist_ril_prop:property_service set;
allow mtkrildmd2 persist_service_atci_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 persist_service_atci_prop:property_service set;
allow mtkrildmd2 platform_app:fd use;
allow mtkrildmd2 pppd_gprs_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 pppd_gprs_prop:property_service set;
allow mtkrildmd2 proc:file write;
allow mtkrildmd2 proc_lk_env:file { read lock getattr write ioctl open append };
allow mtkrildmd2 proc_net:file write;
allow mtkrildmd2 program_binary:binder { transfer call };
allow mtkrildmd2 program_binary:fd use;
allow mtkrildmd2 property_socket:sock_file write;
allow mtkrildmd2 qemu_pipe_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 radio:fd use;
allow mtkrildmd2 radio_data_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow mtkrildmd2 radio_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow mtkrildmd2 radio_device:blk_file { read lock ioctl open getattr };
allow mtkrildmd2 radio_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 radio_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 radio_prop:property_service set;
allow mtkrildmd2 radio_tmpfs:file { write lock open append };
allow mtkrildmd2 ril_active_md_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 ril_active_md_prop:property_service set;
allow mtkrildmd2 ril_mux_report_case_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 ril_mux_report_case_prop:property_service set;
allow mtkrildmd2 sdcard_type:dir { search read lock getattr ioctl open };
allow mtkrildmd2 shell_exec:file { execute read lock getattr execute_no_trans ioctl open };
allow mtkrildmd2 socket_device:sock_file { write lock open append };
allow mtkrildmd2 sysfs:dir { search read lock getattr ioctl open };
allow mtkrildmd2 sysfs:file { read lock ioctl open getattr };
allow mtkrildmd2 sysfs:lnk_file { read lock ioctl open getattr };
allow mtkrildmd2 sysfs_vcorefs_pwrctrl:file { write lock open append };
allow mtkrildmd2 sysfs_wake_lock:file { read lock getattr write ioctl open append };
allow mtkrildmd2 system_data_file:dir { search read lock getattr ioctl open };
allow mtkrildmd2 system_data_file:file { read lock ioctl open getattr };
allow mtkrildmd2 system_file:file { getattr execute execute_no_trans };
allow mtkrildmd2 system_radio_prop:file { read lock ioctl open getattr };
allow mtkrildmd2 system_radio_prop:property_service set;
allow mtkrildmd2 ttyACM_device:chr_file { read lock getattr write ioctl open append };
allow mtkrildmd2 tty_device:chr_file { read lock getattr write ioctl open append };

#ccci
#

allow ccci_fsd block_device:dir search;
allow ccci_fsd c2k_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_fsd c2k_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_fsd ccci_cfg_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_fsd ccci_cfg_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_fsd ccci_device:chr_file { read lock getattr write ioctl open append };
allow ccci_fsd ccci_fsd:capability2 block_suspend;
allow ccci_fsd ccci_fsd:dir { search read lock getattr ioctl open };
allow ccci_fsd ccci_fsd:fd use;
allow ccci_fsd ccci_fsd:fifo_file { read lock getattr write ioctl open append };
allow ccci_fsd ccci_fsd:file { read lock getattr write ioctl open append };
allow ccci_fsd ccci_fsd:lnk_file { read lock ioctl open getattr };
allow ccci_fsd ccci_fsd:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow ccci_fsd ccci_fsd:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow ccci_fsd ccci_fsd:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow ccci_fsd ccci_fsd_exec:file { read open getattr entrypoint execute };
allow ccci_fsd ccci_fsd_tmpfs:file { read write };
allow ccci_fsd ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_fsd ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_fsd guiext-server:binder { transfer call };
allow ccci_fsd guiext-server:fd use;
allow ccci_fsd guiext-server_service:service_manager find;
allow ccci_fsd hotknot_native:binder { transfer call };
allow ccci_fsd hotknot_native:fd use;
allow ccci_fsd init:process sigchld;
allow ccci_fsd nvdata_device:blk_file { read lock getattr write ioctl open append };
allow ccci_fsd nvdata_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_fsd nvdata_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_fsd nvram_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_fsd nvram_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_fsd nvram_data_file:lnk_file read;
allow ccci_fsd nvram_device:blk_file { read lock getattr write ioctl open append };
allow ccci_fsd nvram_device:chr_file { read lock getattr write ioctl open append };
allow ccci_fsd otp_device:chr_file { read lock getattr write ioctl open append };
allow ccci_fsd program_binary:binder { transfer call };
allow ccci_fsd program_binary:fd use;
allow ccci_fsd protect_f_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_fsd protect_f_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_fsd protect_s_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_fsd protect_s_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_fsd rawfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_fsd rawfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_fsd sysfs:dir { search read lock getattr ioctl open };
allow ccci_fsd sysfs:file { read lock ioctl open getattr };
allow ccci_fsd sysfs:lnk_file { read lock ioctl open getattr };
allow ccci_fsd sysfs_ccci:dir search;
allow ccci_fsd sysfs_ccci:file { read lock ioctl open getattr };
allow ccci_fsd sysfs_wake_lock:file { read lock getattr write ioctl open append };
allow ccci_mdinit block_device:dir search;
allow ccci_mdinit ccci_cfg_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_mdinit ccci_cfg_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_mdinit ccci_device:chr_file { read lock getattr write ioctl open append };
allow ccci_mdinit ccci_mdinit:capability2 block_suspend;
allow ccci_mdinit ccci_mdinit:dir { search read lock getattr ioctl open };
allow ccci_mdinit ccci_mdinit:fd use;
allow ccci_mdinit ccci_mdinit:fifo_file { read lock getattr write ioctl open append };
allow ccci_mdinit ccci_mdinit:file { read lock getattr write ioctl open append };
allow ccci_mdinit ccci_mdinit:lnk_file { read lock ioctl open getattr };
allow ccci_mdinit ccci_mdinit:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow ccci_mdinit ccci_mdinit:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow ccci_mdinit ccci_mdinit:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow ccci_mdinit ccci_mdinit_exec:file { read open getattr entrypoint execute };
allow ccci_mdinit ccci_mdinit_tmpfs:file { read write };
allow ccci_mdinit ccci_monitor_device:chr_file { read lock getattr write ioctl open append };
allow ccci_mdinit ctl_ccci2_fsd_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_ccci2_fsd_prop:property_service set;
allow ccci_mdinit ctl_ccci2_rpcd_prop:property_service set;
allow ccci_mdinit ctl_ccci3_fsd_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_ccci3_fsd_prop:property_service set;
allow ccci_mdinit ctl_ccci_fsd_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_ccci_fsd_prop:property_service set;
allow ccci_mdinit ctl_ccci_rpcd_prop:property_service set;
allow ccci_mdinit ctl_dualmdlogger_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_dualmdlogger_prop:property_service set;
allow ccci_mdinit ctl_emdlogger1_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_emdlogger1_prop:property_service set;
allow ccci_mdinit ctl_emdlogger2_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_emdlogger2_prop:property_service set;
allow ccci_mdinit ctl_emdlogger3_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_emdlogger3_prop:property_service set;
allow ccci_mdinit ctl_gsm0710muxd-d_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_gsm0710muxd-d_prop:property_service set;
allow ccci_mdinit ctl_gsm0710muxd-s_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_gsm0710muxd-s_prop:property_service set;
allow ccci_mdinit ctl_gsm0710muxd_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_gsm0710muxd_prop:property_service set;
allow ccci_mdinit ctl_gsm0710muxdmd2_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_gsm0710muxdmd2_prop:property_service set;
allow ccci_mdinit ctl_mdlogger_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_mdlogger_prop:property_service set;
allow ccci_mdinit ctl_ril-daemon-d_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_ril-daemon-d_prop:property_service set;
allow ccci_mdinit ctl_ril-daemon-md2_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_ril-daemon-md2_prop:property_service set;
allow ccci_mdinit ctl_ril-daemon-mtk_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_ril-daemon-mtk_prop:property_service set;
allow ccci_mdinit ctl_ril-daemon-s_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_ril-daemon-s_prop:property_service set;
allow ccci_mdinit ctl_ril-proxy_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_ril-proxy_prop:property_service set;
allow ccci_mdinit ctl_rildaemon_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_rildaemon_prop:property_service set;
allow ccci_mdinit ctl_viarild_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ctl_viarild_prop:property_service set;
allow ccci_mdinit custom_file:dir { search read lock getattr ioctl open };
allow ccci_mdinit custom_file:file { read lock ioctl open getattr };
allow ccci_mdinit devmap_device:chr_file { read lock ioctl open getattr };
allow ccci_mdinit ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_mdinit ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_mdinit guiext-server:binder { transfer call };
allow ccci_mdinit guiext-server:fd use;
allow ccci_mdinit guiext-server_service:service_manager find;
allow ccci_mdinit hotknot_native:binder { transfer call };
allow ccci_mdinit hotknot_native:fd use;
allow ccci_mdinit init:process sigchld;
allow ccci_mdinit init:unix_stream_socket connectto;
allow ccci_mdinit mdlog_data_file:dir search;
allow ccci_mdinit mdlog_data_file:file { read lock ioctl open getattr };
allow ccci_mdinit misc_sd_device:chr_file { read lock ioctl open getattr };
allow ccci_mdinit mmcblk0_block_device:blk_file { read lock getattr write ioctl open append };
allow ccci_mdinit mtd_device:chr_file { read lock getattr write ioctl open append };
allow ccci_mdinit mtd_device:dir search;
allow ccci_mdinit mtk_md_prop:file { read lock ioctl open getattr };
allow ccci_mdinit mtk_md_prop:property_service set;
allow ccci_mdinit net_cdma_mdmstat:file { read lock ioctl open getattr };
allow ccci_mdinit net_cdma_mdmstat:property_service set;
allow ccci_mdinit nvdata_device:blk_file { read lock getattr write ioctl open append };
allow ccci_mdinit nvdata_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow ccci_mdinit nvdata_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_mdinit nvram_data_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow ccci_mdinit nvram_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_mdinit nvram_data_file:lnk_file read;
allow ccci_mdinit nvram_device:blk_file { read lock getattr write ioctl open append };
allow ccci_mdinit nvram_device:chr_file { read lock getattr write ioctl open append };
allow ccci_mdinit para_block_device:blk_file { read lock getattr write ioctl open append };
allow ccci_mdinit preloader_block_device:blk_file { read lock ioctl open getattr };
allow ccci_mdinit preloader_device:chr_file { read lock getattr write ioctl open append };
allow ccci_mdinit proc_lk_env:file { read lock getattr write ioctl open append };
allow ccci_mdinit program_binary:binder { transfer call };
allow ccci_mdinit program_binary:fd use;
allow ccci_mdinit property_socket:sock_file write;
allow ccci_mdinit protect_f_data_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow ccci_mdinit protect_f_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_mdinit protect_s_data_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow ccci_mdinit protect_s_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_mdinit radio_prop:file { read lock ioctl open getattr };
allow ccci_mdinit radio_prop:property_service set;
allow ccci_mdinit ril_active_md_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ril_active_md_prop:property_service set;
allow ccci_mdinit ril_mux_report_case_prop:file { read lock ioctl open getattr };
allow ccci_mdinit ril_mux_report_case_prop:property_service set;
allow ccci_mdinit sec_ro_device:chr_file { read lock ioctl open getattr };
allow ccci_mdinit secro_block_device:blk_file { read lock ioctl open getattr };
allow ccci_mdinit sysfs:dir { search read lock getattr ioctl open };
allow ccci_mdinit sysfs:file { read lock ioctl open getattr };
allow ccci_mdinit sysfs:lnk_file { read lock ioctl open getattr };
allow ccci_mdinit sysfs_ccci:dir search;
allow ccci_mdinit sysfs_ccci:file { read lock getattr write ioctl open append };
allow ccci_mdinit sysfs_ssw:dir search;
allow ccci_mdinit sysfs_ssw:file { read lock ioctl open getattr };
allow ccci_mdinit sysfs_wake_lock:file { read lock getattr write ioctl open append };
allow ccci_mdinit volte_prop:property_service set;
allow ccci_rpcd block_device:dir search;
allow ccci_rpcd ccci_device:chr_file { read lock getattr write ioctl open append };
allow ccci_rpcd ccci_rpcd:capability2 block_suspend;
allow ccci_rpcd ccci_rpcd:dir { search read lock getattr ioctl open };
allow ccci_rpcd ccci_rpcd:fd use;
allow ccci_rpcd ccci_rpcd:fifo_file { read lock getattr write ioctl open append };
allow ccci_rpcd ccci_rpcd:file { read lock getattr write ioctl open append };
allow ccci_rpcd ccci_rpcd:lnk_file { read lock ioctl open getattr };
allow ccci_rpcd ccci_rpcd:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow ccci_rpcd ccci_rpcd:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow ccci_rpcd ccci_rpcd:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow ccci_rpcd ccci_rpcd_exec:file { read open getattr entrypoint execute };
allow ccci_rpcd ccci_rpcd_tmpfs:file { read write };
allow ccci_rpcd ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ccci_rpcd ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ccci_rpcd guiext-server:binder { transfer call };
allow ccci_rpcd guiext-server:fd use;
allow ccci_rpcd guiext-server_service:service_manager find;
allow ccci_rpcd hotknot_native:binder { transfer call };
allow ccci_rpcd hotknot_native:fd use;
allow ccci_rpcd init:process sigchld;
allow ccci_rpcd misc2_block_device:blk_file { read lock getattr write ioctl open append };
allow ccci_rpcd mmcblk0_block_device:blk_file { read lock getattr write ioctl open append };
allow ccci_rpcd program_binary:binder { transfer call };
allow ccci_rpcd program_binary:fd use;
allow ccci_rpcd sysfs:dir { search read lock getattr ioctl open };
allow ccci_rpcd sysfs:file { read lock ioctl open getattr };
allow ccci_rpcd sysfs:lnk_file { read lock ioctl open getattr };
allow ccci_rpcd sysfs_ccci:dir search;
allow ccci_rpcd sysfs_ccci:file { read lock ioctl open getattr };
allow ccci_rpcd sysfs_wake_lock:file { read lock getattr write ioctl open append };

#yamaha
#
allow yamaha537 ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow yamaha537 ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow yamaha537 gsensor_device:chr_file { read write ioctl open };
allow yamaha537 guiext-server:binder { transfer call };
allow yamaha537 guiext-server:fd use;
allow yamaha537 guiext-server_service:service_manager find;
allow yamaha537 hotknot_native:binder { transfer call };
allow yamaha537 hotknot_native:fd use;
allow yamaha537 init:process sigchld;
allow yamaha537 input_device:chr_file { read write ioctl open };
allow yamaha537 input_device:dir { read write search open };
allow yamaha537 input_device:file { read open };
allow yamaha537 msensor_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow yamaha537 msensor_data_file:fifo_file { rename setattr read lock create getattr write ioctl unlink open append };
allow yamaha537 msensor_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow yamaha537 msensor_data_file:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow yamaha537 msensor_data_file:sock_file { rename setattr read lock create getattr write ioctl unlink open append };
allow yamaha537 msensor_device:chr_file { read write ioctl open };
allow yamaha537 program_binary:binder { transfer call };
allow yamaha537 program_binary:fd use;
allow yamaha537 sysfs:dir { read open };
allow yamaha537 sysfs:file { read open };
allow yamaha537 system_data_file:dir { search setattr read lock create getattr write ioctl remove_name open add_name };
allow yamaha537 yamaha537:dir { search read lock getattr ioctl open };
allow yamaha537 yamaha537:fd use;
allow yamaha537 yamaha537:fifo_file { read lock getattr write ioctl open append };
allow yamaha537 yamaha537:file { read lock getattr write ioctl open append };
allow yamaha537 yamaha537:lnk_file { read lock ioctl open getattr };
allow yamaha537 yamaha537:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow yamaha537 yamaha537:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow yamaha537 yamaha537:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow yamaha537 yamaha537_exec:file { read open getattr entrypoint execute };
allow yamaha537 yamaha537_tmpfs:file { read write };

#nfc
#
allow nfc app_api_service:service_manager find;
allow nfc app_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow nfc app_data_file:fifo_file { rename setattr read lock create getattr write ioctl unlink open append };
allow nfc app_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow nfc app_data_file:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow nfc app_data_file:sock_file { rename setattr read lock create getattr write ioctl unlink open append };
allow nfc asec_apk_file:file { read lock ioctl open getattr };
allow nfc audioserver_service:service_manager find;
allow nfc custom_file:dir getattr;
allow nfc drmserver_service:service_manager find;
allow nfc ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow nfc gpu_device:chr_file { read lock getattr write ioctl open append };
allow nfc guiext-server:binder { transfer call };
allow nfc guiext-server:fd use;
allow nfc guiext-server_service:service_manager find;
allow nfc hotknot_native:binder { transfer call };
allow nfc hotknot_native:fd use;
allow nfc init:unix_stream_socket { read write setopt connectto };
allow nfc ion_device:chr_file { read lock getattr write ioctl open append };
allow nfc keystore:binder { transfer call };
allow nfc keystore:fd use;
allow nfc keystore:keystore_key { insert get verify list sign exist get_state delete };
allow nfc keystore_service:service_manager find;
allow nfc media_rw_data_file:dir { search read create write remove_name open add_name };
allow nfc media_rw_data_file:file { rename read create write unlink open };
allow nfc mediacodec_service:service_manager find;
allow nfc mediaextractor_service:service_manager find;
allow nfc mediaserver_service:service_manager find;
allow nfc mt6605_device:chr_file { read write ioctl open getattr };
allow nfc nfc:dir { search read lock getattr ioctl open };
allow nfc nfc:fd use;
allow nfc nfc:fifo_file { read lock getattr write ioctl open append };
allow nfc nfc:file { read lock getattr write ioctl open append };
allow nfc nfc:lnk_file { read lock ioctl open getattr };
allow nfc nfc:netlink_route_socket { setopt setattr read lock create nlmsg_read write getattr connect shutdown bind getopt append };
allow nfc nfc:netlink_selinux_socket { name_bind recvfrom send_msg setopt setattr read lock create sendto accept write relabelfrom getattr connect shutdown bind recv_msg relabelto getopt append listen };
allow nfc nfc:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop execmem getcap getpgid getsched signull setrlimit };
allow nfc nfc:rawip_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow nfc nfc:tcp_socket { lock accept connect shutdown append connectto create write relabelfrom getattr getopt listen acceptfrom setopt read newconn ioctl recv_msg name_bind name_connect send_msg setattr bind recvfrom sendto relabelto node_bind };
allow nfc nfc:udp_socket { lock accept connect shutdown append create write relabelfrom getattr getopt listen setopt read ioctl recv_msg name_bind send_msg setattr bind recvfrom sendto relabelto node_bind };
allow nfc nfc:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow nfc nfc:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow nfc nfc_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow nfc nfc_data_file:fifo_file { rename setattr read lock create getattr write ioctl unlink open append };
allow nfc nfc_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow nfc nfc_data_file:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow nfc nfc_data_file:sock_file { rename setattr read lock create getattr write ioctl unlink open append };
allow nfc nfc_device:chr_file { read lock getattr write ioctl open append };
allow nfc nfc_prop:file { read lock ioctl open getattr };
allow nfc nfc_prop:property_service set;
allow nfc nfc_service:service_manager { add find };
allow nfc nfc_socket:dir { write remove_name search add_name };
allow nfc nfc_socket:sock_file { write create unlink setattr };
allow nfc nfc_tmpfs:file { read write execute };
allow nfc node:tcp_socket node_bind;
allow nfc platform_app_tmpfs:file write;
allow nfc port:tcp_socket name_bind;
allow nfc program_binary:binder { transfer call };
allow nfc program_binary:fd use;
allow nfc program_binary_service:service_manager find;
allow nfc property_socket:sock_file write;
allow nfc radio_service:service_manager find;
allow nfc sdcard_type:dir { write remove_name create search add_name };
allow nfc sdcard_type:file { rename read create write getattr open };
allow nfc shell_data_file:file read;
allow nfc surfaceflinger:dir search;
allow nfc surfaceflinger:fifo_file { read write };
allow nfc surfaceflinger:file { read getattr open };
allow nfc surfaceflinger_service:service_manager find;
allow nfc sysfs:dir { search read lock getattr ioctl open };
allow nfc sysfs:file { read lock getattr write ioctl open };
allow nfc sysfs:lnk_file { read lock ioctl open getattr };
allow nfc sysfs_nfc_power_writable:file { read lock getattr write ioctl open append };
allow nfc sysfs_usb:file write;
allow nfc system_api_service:service_manager find;
allow nfc tun_device:chr_file { read write ioctl getattr append };
allow nfc vfat:dir { write search add_name };
allow nfc vfat:file { read write create open getattr };
allow nfc zygote:unix_stream_socket { getopt getattr };

#ril
#
allow ril-3gddaemon alarm_device:chr_file { read lock getattr write ioctl open append };
allow ril-3gddaemon cgroup:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ril-3gddaemon ctl_zpppdgprs_prop:file { read lock ioctl open getattr };
allow ril-3gddaemon ctl_zpppdgprs_prop:property_service set;
allow ril-3gddaemon device:dir { read write open };
allow ril-3gddaemon ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ril-3gddaemon ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ril-3gddaemon efs_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow ril-3gddaemon efs_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ril-3gddaemon guiext-server:binder { transfer call };
allow ril-3gddaemon guiext-server:fd use;
allow ril-3gddaemon guiext-server_service:service_manager find;
allow ril-3gddaemon hotknot_native:binder { transfer call };
allow ril-3gddaemon hotknot_native:fd use;
allow ril-3gddaemon init:dir { read getattr open search };
allow ril-3gddaemon init:process sigchld;
allow ril-3gddaemon init:unix_stream_socket connectto;
allow ril-3gddaemon kernel:system module_request;
allow ril-3gddaemon mtd_device:dir search;
allow ril-3gddaemon net_radio_prop:file { read lock ioctl open getattr };
allow ril-3gddaemon net_radio_prop:property_service set;
allow ril-3gddaemon ppp_device:chr_file { read write ioctl open };
allow ril-3gddaemon ppp_exec:file { read getattr open execute execute_no_trans };
allow ril-3gddaemon pppoe_ppp0_prop:file { read lock ioctl open getattr };
allow ril-3gddaemon pppoe_ppp0_prop:property_service set;
allow ril-3gddaemon program_binary:binder { transfer call };
allow ril-3gddaemon program_binary:fd use;
allow ril-3gddaemon property_socket:sock_file write;
allow ril-3gddaemon radio_data_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow ril-3gddaemon radio_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow ril-3gddaemon radio_device:blk_file { read lock ioctl open getattr };
allow ril-3gddaemon radio_device:chr_file { read lock getattr write ioctl open append };
allow ril-3gddaemon radio_prop:file { read lock ioctl open getattr };
allow ril-3gddaemon radio_prop:property_service set;
allow ril-3gddaemon ril-3gddaemon:capability { setuid sys_module dac_override net_raw setgid net_admin };
allow ril-3gddaemon ril-3gddaemon:capability2 block_suspend;
allow ril-3gddaemon ril-3gddaemon:dir { search read lock getattr ioctl open };
allow ril-3gddaemon ril-3gddaemon:fd use;
allow ril-3gddaemon ril-3gddaemon:fifo_file { read lock getattr write ioctl open append };
allow ril-3gddaemon ril-3gddaemon:file { read lock getattr write ioctl open append };
allow ril-3gddaemon ril-3gddaemon:lnk_file { read lock ioctl open getattr };
allow ril-3gddaemon ril-3gddaemon:netlink_kobject_uevent_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow ril-3gddaemon ril-3gddaemon:netlink_route_socket { nlmsg_write setopt setattr read lock create nlmsg_read write getattr connect shutdown bind getopt append };
allow ril-3gddaemon ril-3gddaemon:netlink_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow ril-3gddaemon ril-3gddaemon:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow ril-3gddaemon ril-3gddaemon:rawip_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow ril-3gddaemon ril-3gddaemon:socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow ril-3gddaemon ril-3gddaemon:tcp_socket { lock accept connect shutdown append connectto create write relabelfrom getattr getopt listen acceptfrom setopt read newconn ioctl recv_msg name_bind name_connect send_msg setattr bind recvfrom sendto relabelto node_bind };
allow ril-3gddaemon ril-3gddaemon:udp_socket { lock accept connect shutdown append create write relabelfrom getattr getopt listen setopt read ioctl recv_msg name_bind send_msg setattr bind recvfrom sendto relabelto node_bind };
allow ril-3gddaemon ril-3gddaemon:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow ril-3gddaemon ril-3gddaemon:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow ril-3gddaemon ril-3gddaemon_exec:file { read open getattr entrypoint execute };
allow ril-3gddaemon ril-3gddaemon_tmpfs:file { read write };
allow ril-3gddaemon sdcard_type:dir { search read lock getattr ioctl open };
allow ril-3gddaemon shell_exec:file { execute read lock getattr execute_no_trans ioctl open };
allow ril-3gddaemon sysfs:dir { search read lock getattr ioctl open };
allow ril-3gddaemon sysfs:file { read lock ioctl open getattr };
allow ril-3gddaemon sysfs:lnk_file { read lock ioctl open getattr };
allow ril-3gddaemon sysfs_wake_lock:file { read lock getattr write ioctl open append };
allow ril-3gddaemon system_data_file:dir { search read lock getattr ioctl open };
allow ril-3gddaemon system_data_file:file { read lock ioctl open getattr };
allow ril-3gddaemon system_file:file { getattr execute execute_no_trans };
allow ril-3gddaemon system_prop:file { read lock ioctl open getattr };
allow ril-3gddaemon system_prop:property_service set;
allow ril-3gddaemon system_radio_prop:file { read lock ioctl open getattr };
allow ril-3gddaemon system_radio_prop:property_service set;
allow ril-3gddaemon tty_device:chr_file { read lock getattr write ioctl open append };
allow rild alarm_device:chr_file { read lock getattr write ioctl open append };
allow rild bluetooth_efs_file:dir { search read lock getattr ioctl open };
allow rild bluetooth_efs_file:file { read lock ioctl open getattr };
allow rild cache_pc_file:dir { write remove_name search add_name };
allow rild cache_pc_file:file { setattr read create write getattr unlink open };
allow rild cgroup:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow rild ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow rild ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow rild efs_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow rild efs_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow rild gps_device:chr_file { read lock getattr write ioctl open append };
allow rild guiext-server:binder { transfer call };
allow rild guiext-server:fd use;
allow rild guiext-server_service:service_manager find;
allow rild hotknot_native:binder { transfer call };
allow rild hotknot_native:fd use;
allow rild init:process sigchld;
allow rild init:unix_stream_socket connectto;
allow rild kernel:system module_request;
allow rild mtd_device:dir search;
allow rild net_radio_prop:file { read lock ioctl open getattr };
allow rild net_radio_prop:property_service set;
allow rild program_binary:binder { transfer call };
allow rild program_binary:fd use;
allow rild property_socket:sock_file write;
allow rild radio_data_file:dir { search read lock getattr write ioctl remove_name open add_name };
allow rild radio_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow rild radio_device:blk_file { read lock ioctl open getattr };
allow rild radio_device:chr_file { read lock getattr write ioctl open append };
allow rild radio_prop:file { read lock ioctl open getattr };
allow rild radio_prop:property_service set;
allow rild rild:capability { setuid net_admin net_raw };
allow rild rild:capability2 block_suspend;
allow rild rild:dir { search read lock getattr ioctl open };
allow rild rild:fd use;
allow rild rild:fifo_file { read lock getattr write ioctl open append };
allow rild rild:file { read lock getattr write ioctl open append };
allow rild rild:lnk_file { read lock ioctl open getattr };
allow rild rild:netlink_generic_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow rild rild:netlink_kobject_uevent_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow rild rild:netlink_route_socket { nlmsg_write setopt setattr read lock create nlmsg_read write getattr connect shutdown bind getopt append };
allow rild rild:netlink_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow rild rild:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow rild rild:rawip_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow rild rild:socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow rild rild:tcp_socket { lock accept connect shutdown append connectto create write relabelfrom getattr getopt listen acceptfrom setopt read newconn ioctl recv_msg name_bind name_connect send_msg setattr bind recvfrom sendto relabelto node_bind };
allow rild rild:udp_socket { lock accept connect shutdown append create write relabelfrom getattr getopt listen setopt read ioctl recv_msg name_bind send_msg setattr bind recvfrom sendto relabelto node_bind };
allow rild rild:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow rild rild:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow rild rild_exec:file { read open getattr entrypoint execute };
allow rild rild_tmpfs:file { read write };
allow rild sdcard_type:dir { search read lock getattr ioctl open };
allow rild shell_exec:file { execute read lock getattr execute_no_trans ioctl open };
allow rild suntrold:unix_stream_socket connectto;
allow rild suntrold_sock_socket:dir search;
allow rild suntrold_sock_socket:sock_file write;
allow rild sysfs:dir { search read lock getattr ioctl open };
allow rild sysfs:file { read lock ioctl open getattr };
allow rild sysfs:lnk_file { read lock ioctl open getattr };
allow rild sysfs_wake_lock:file { read lock getattr write ioctl open append };
allow rild system_data_file:dir { search read lock getattr ioctl open };
allow rild system_data_file:file { read lock ioctl open getattr };
allow rild system_file:file { getattr execute execute_no_trans };
allow rild system_radio_prop:file { read lock ioctl open getattr };
allow rild system_radio_prop:property_service set;
allow rild tty_device:chr_file { read lock getattr write ioctl open append };
allow rilproxy audioserver:binder { transfer call };
allow rilproxy audioserver_service:service_manager find;
allow rilproxy cdma_prop:property_service set;
allow rilproxy ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow rilproxy ecryptfs:file { rename setattr read lock create getattr write ioctl unlink open append };
allow rilproxy embms_library_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow rilproxy embms_library_file:fifo_file { rename setattr read lock create getattr write ioctl unlink open append };
allow rilproxy embms_library_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow rilproxy embms_library_file:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow rilproxy embms_library_file:sock_file { rename setattr read lock create getattr write ioctl unlink open append };
allow rilproxy guiext-server:binder { transfer call };
allow rilproxy guiext-server:fd use;
allow rilproxy guiext-server_service:service_manager find;
allow rilproxy hotknot_native:binder { transfer call };
allow rilproxy hotknot_native:fd use;
allow rilproxy init:process sigchld;
allow rilproxy init:unix_stream_socket connectto;
allow rilproxy mal_mfi_socket:sock_file { write lock open append };
allow rilproxy mtk_agpsd:unix_stream_socket connectto;
allow rilproxy mtkmal:unix_stream_socket connectto;
allow rilproxy mtkrild:unix_stream_socket connectto;
allow rilproxy netd_socket:sock_file { read write };
allow rilproxy proc:file read;
allow rilproxy program_binary:binder { transfer call };
allow rilproxy program_binary:fd use;
allow rilproxy property_socket:sock_file write;
allow rilproxy radio_prop:property_service set;
allow rilproxy ril_cdma_report_prop:property_service set;
allow rilproxy ril_mux_report_case_prop:property_service set;
allow rilproxy rild_via_socket:sock_file write;
allow rilproxy rilproxy:capability setuid;
allow rilproxy rilproxy:capability2 block_suspend;
allow rilproxy rilproxy:dir { search read lock getattr ioctl open };
allow rilproxy rilproxy:fd use;
allow rilproxy rilproxy:fifo_file { read lock getattr write ioctl open append };
allow rilproxy rilproxy:file { read lock getattr write ioctl open append };
allow rilproxy rilproxy:lnk_file { read lock ioctl open getattr };
allow rilproxy rilproxy:netlink_route_socket { setopt setattr read lock create nlmsg_read write getattr connect shutdown bind getopt append };
allow rilproxy rilproxy:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop getcap getpgid getsched signull setrlimit };
allow rilproxy rilproxy:rawip_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow rilproxy rilproxy:tcp_socket { lock accept connect shutdown append connectto create write relabelfrom getattr getopt listen acceptfrom setopt read newconn ioctl recv_msg name_bind name_connect send_msg setattr bind recvfrom sendto relabelto node_bind };
allow rilproxy rilproxy:udp_socket { lock accept connect shutdown append create write relabelfrom getattr getopt listen setopt read ioctl recv_msg name_bind send_msg setattr bind recvfrom sendto relabelto node_bind };
allow rilproxy rilproxy:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow rilproxy rilproxy:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow rilproxy rilproxy_exec:file { read open getattr entrypoint execute };
allow rilproxy rilproxy_tmpfs:file { read write };
allow rilproxy servicemanager:binder call;
allow rilproxy socket_device:sock_file write;
allow rilproxy statusd:unix_stream_socket connectto;
allow rilproxy sysfs:dir { search read lock getattr ioctl open };
allow rilproxy sysfs:file { read lock ioctl open getattr };
allow rilproxy sysfs:lnk_file { read lock ioctl open getattr };
allow rilproxy sysfs_wake_lock:file { read lock getattr write ioctl open append };
allow rilproxy system_data_file:dir { search read lock getattr write ioctl open add_name };
allow rilproxy untrusted_app:unix_stream_socket connectto;
allow rilproxy viarild:unix_stream_socket connectto;

#radio
#
allow radio agpsd_socket:sock_file write;
allow radio alarm_device:chr_file { read lock getattr write ioctl open append };
allow radio als_ps_device:chr_file { read ioctl open };
allow radio app_api_service:service_manager find;
allow radio app_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow radio app_data_file:fifo_file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio app_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio app_data_file:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio app_data_file:sock_file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio asec_apk_file:file { read lock ioctl open getattr };
allow radio atci_service_exec:file getattr;
allow radio atcid_exec:file getattr;
allow radio audiocmdservice_atci_exec:file getattr;
allow radio audioserver_service:service_manager find;
allow radio block_device:dir search;
allow radio bt_int_adp_socket:sock_file write;
allow radio cameraserver_service:service_manager find;
allow radio ccci_fsd:dir { search read lock getattr ioctl open };
allow radio ccci_fsd:file { read lock ioctl open getattr };
allow radio cdma_prop:property_service set;
allow radio ctl_atci_service_prop:property_service set;
allow radio ctl_atcid-daemon-u_prop:property_service set;
allow radio ctl_mbimd_prop:property_service set;
allow radio ctl_rildaemon_prop:file { read lock ioctl open getattr };
allow radio ctl_rildaemon_prop:property_service set;
allow radio custom_file:dir { read getattr open search };
allow radio custom_file:file { read getattr open };
allow radio customization_target_file:dir search;
allow radio customization_target_file:lnk_file read;
allow radio debug_prop:property_service set;
allow radio debugfs_usb20_phy:dir search;
allow radio debugfs_usb20_phy:file { read getattr open };
allow radio dm_agent_binder:binder call;
allow radio dm_agent_binder_service:service_manager find;
allow radio drmserver_service:service_manager find;
allow radio ecryptfs:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow radio em_svr:unix_stream_socket connectto;
allow radio gpu_device:chr_file { read lock getattr write ioctl open append };
allow radio guiext-server:binder { transfer call };
allow radio guiext-server:fd use;
allow radio guiext-server_service:service_manager find;
allow radio hotknot_native:binder { transfer call };
allow radio hotknot_native:fd use;
allow radio ims_mode_prop:property_service set;
allow radio init:unix_stream_socket connectto;
allow radio ion_device:chr_file { read lock getattr write ioctl open append };
allow radio keystore:binder { transfer call };
allow radio keystore:fd use;
allow radio keystore:keystore_key { insert get verify list sign exist get_state delete };
allow radio keystore_service:service_manager find;
allow radio mal_mfi_socket:sock_file write;
allow radio md_monitor:dir search;
allow radio md_monitor:file { read getattr open };
allow radio md_monitor:unix_stream_socket connectto;
allow radio media_rw_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow radio media_rw_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio media_wfd_prop:property_service set;
allow radio mediacodec_service:service_manager find;
allow radio mediaserver_service:service_manager find;
allow radio mediatek_prop:property_service set;
allow radio mt6605_device:chr_file { read write ioctl open getattr };
allow radio mt_otg_test_device:chr_file { read write ioctl open };
allow radio mtgpio_device:chr_file { read ioctl open };
allow radio mtk_agpsd:unix_stream_socket connectto;
allow radio mtk_em_3gvt_prop:property_service set;
allow radio mtk_em_auto_answer_prop:property_service set;
allow radio mtk_em_bt_sspdebug_prop:property_service set;
allow radio mtk_em_ims_prop:property_service set;
allow radio mtk_em_ims_simulate_prop:property_service set;
allow radio mtk_em_pdn_prop:property_service set;
allow radio mtk_em_prop:property_service set;
allow radio mtk_em_ril_apnchange_prop:property_service set;
allow radio mtk_volte_prop:property_service set;
allow radio mtk_vt_prop:property_service set;
allow radio mtk_wfc_prop:property_service set;
allow radio mtkmal:unix_stream_socket connectto;
allow radio mtkrild:unix_stream_socket connectto;
allow radio mtkrildmd2:unix_stream_socket connectto;
allow radio net_data_file:dir search;
allow radio net_data_file:file { read lock ioctl open getattr };
allow radio net_radio_prop:file { read lock ioctl open getattr };
allow radio net_radio_prop:property_service set;
allow radio nfc_service:service_manager find;
allow radio nfc_socket:dir { write remove_name search add_name };
allow radio nfc_socket:sock_file { write create unlink setattr };
allow radio nvdata_file:dir search;
allow radio nvdata_file:file { read lock getattr write ioctl open append };
allow radio persist_ril_prop:property_service set;
allow radio persist_service_atci_prop:property_service set;
allow radio ppl_agent_service:service_manager find;
allow radio proc_mtkcooler:dir search;
allow radio proc_mtktz:dir search;
allow radio program_binary:binder { transfer call };
allow radio program_binary:fd use;
allow radio program_binary_service:service_manager find;
allow radio property_socket:sock_file write;
allow radio radio:dir { search read lock getattr ioctl open };
allow radio radio:fd use;
allow radio radio:fifo_file { read lock getattr write ioctl open append };
allow radio radio:file { read lock getattr write ioctl open append };
allow radio radio:lnk_file { read lock ioctl open getattr };
allow radio radio:netlink_kobject_uevent_socket { setopt read bind create getattr getopt };
allow radio radio:netlink_route_socket { setopt setattr read lock create nlmsg_read write getattr connect shutdown bind getopt append };
allow radio radio:netlink_selinux_socket { name_bind recvfrom send_msg setopt setattr read lock create sendto accept write relabelfrom getattr connect shutdown bind recv_msg relabelto getopt append listen };
allow radio radio:process { fork getsession sigkill sigchld setpgid setsched signal getattr setcap sigstop execmem getcap getpgid getsched signull setrlimit };
allow radio radio:rawip_socket { setopt setattr read lock create getattr write ioctl connect shutdown bind getopt append };
allow radio radio:tcp_socket { lock accept connect shutdown append connectto create write relabelfrom getattr getopt listen acceptfrom setopt read newconn ioctl recv_msg name_bind name_connect send_msg setattr bind recvfrom sendto relabelto node_bind };
allow radio radio:udp_socket { lock accept connect shutdown append create write relabelfrom getattr getopt listen setopt read ioctl recv_msg name_bind send_msg setattr bind recvfrom sendto relabelto node_bind };
allow radio radio:unix_dgram_socket { setopt setattr read lock create sendto getattr write ioctl connect shutdown bind getopt append };
allow radio radio:unix_stream_socket { connectto setopt setattr read lock create getattr accept write ioctl connect shutdown bind getopt append listen };
allow radio radio_data_file:dir { rename search setattr read lock create reparent getattr write ioctl rmdir remove_name open add_name };
allow radio radio_data_file:fifo_file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio radio_data_file:file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio radio_data_file:lnk_file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio radio_data_file:sock_file { rename setattr read lock create getattr write ioctl unlink open append };
allow radio radio_prop:file { read lock ioctl open getattr };
allow radio radio_prop:property_service set;
allow radio radio_service:service_manager { add find };
allow radio radio_tmpfs:file { read write execute };
allow radio ril-3gddaemon:unix_stream_socket connectto;
allow radio rild-dongle_socket:sock_file write;
allow radio rild2_socket:sock_file write;
allow radio rild3_socket:sock_file write;
allow radio rild4_socket:sock_file write;
allow radio rild:unix_stream_socket connectto;
allow radio rild_atci_c2k_socket:sock_file write;
allow radio rild_atci_md2_socket:sock_file write;
allow radio rild_atci_socket:sock_file write;
allow radio rild_ims_socket:sock_file write;
allow radio rild_imsm_socket:sock_file write;
allow radio rild_mal_at_md2_socket:sock_file write;
allow radio rild_mal_at_socket:sock_file write;
allow radio rild_mal_md2_socket:sock_file write;
allow radio rild_mal_socket:sock_file write;
allow radio rild_md2_socket:sock_file write;
allow radio rild_socket:sock_file write;
allow radio rild_via_socket:sock_file write;
allow radio rild_vsim_md2_socket:sock_file write;
allow radio rild_vsim_socket:sock_file write;
allow radio rilproxy:unix_stream_socket connectto;
allow radio rilproxy_atci_socket:sock_file write;
allow radio sdcard_type:dir { write create add_name };
allow radio sdcard_type:file { read write create open getattr };
allow radio semc_version_cust_active_prop:file { read getattr open };
allow radio statusd:unix_stream_socket connectto;
allow radio stpant_device:chr_file { read write open };
allow radio stpbt_device:chr_file { read write open };
allow radio surfaceflinger:fifo_file { read lock getattr write ioctl open append };
allow radio surfaceflinger_service:service_manager find;
allow radio sysfs:dir { search read lock getattr ioctl open };
allow radio sysfs:file { read lock ioctl open getattr };
allow radio sysfs:lnk_file { read lock ioctl open getattr };
allow radio sysfs_keypad_file:dir { search lock write remove_name open add_name };
allow radio sysfs_keypad_file:file { write lock open append };
allow radio system_api_service:service_manager find;
allow radio system_app_data_file:dir { getattr search };
allow radio system_app_data_file:file getattr;
allow radio system_prop:property_service set;
allow radio system_radio_prop:file { read lock ioctl open getattr };
allow radio system_radio_prop:property_service set;
allow radio ttyGS_device:chr_file { read write ioctl open };
allow radio tun_device:chr_file { read write ioctl getattr append };
allow radio usp_prop:property_service set;
allow radio viarild:unix_stream_socket connectto;
allow radio volte_imcb:unix_stream_socket connectto;
allow radio volte_imsa1_socket:sock_file write;
allow radio vtservice:binder { transfer call };
allow radio vtservice_service:service_manager find;
allow radio zygote:unix_stream_socket { getopt getattr };

